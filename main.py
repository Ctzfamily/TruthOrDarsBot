import logging, os, random
from pyrogram import filters, Client, __version__ as pyro
from pyrogram.types import *

import requests 

# enable logging
FORMAT = "[Truth-or-Dare] %(message)s"
logging.basicConfig(
    level=logging.INFO, format=FORMAT
)
  

API_ID = os.environ.get("API_ID", None)
API_HASH = os.environ.get("API_HASH", None)
BOT_TOKEN = os.environ.get("BOT_TOKEN", None)
SUPPORT = os.environ.get("SUPPORT", None)
UPDATES = os.environ.get("UPDATES", None)
BOT_USERNAME = os.environ.get("BOT_USERNAME", None) 


bot = Client("nandhabot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)


buttons = [[
            InlineKeyboardButton("с┤Ас┤Ес┤Е с┤Нс┤З", url=f"t.me/{BOT_USERNAME}?startgroup=true"),
            InlineKeyboardButton("╩Ьс┤З╩Яс┤Ш", callback_data="help_back"),
           ],[
            InlineKeyboardButton("sс┤Ьс┤Шс┤Шс┤П╩Ас┤Ы", url=f"https://t.me/{SUPPORT}"),
            InlineKeyboardButton("с┤Ьс┤Шс┤Ес┤Ас┤Ыс┤Зs", url=f"https://t.me/{UPDATES}")]]

PM_START_TEXT = """
**Welcome** {}~ kun ЁЯШИ
`I'm A Truth or Dare Telegram Bot! `
**Make Your Groups Active By Adding Me There! ├Ч├Ч**
"""

@bot.on_message(filters.command(["start","help"]))
async def start(_, m):
       url = "http://telegra.ph/file/c50b1959b61acf73f0a57.jpg"
       await m.reply_photo(photo=url,caption=PM_START_TEXT.format(m.from_user.mention),
             reply_markup=InlineKeyboardMarkup(buttons))
    
LANG_CODE = [[InlineKeyboardButton("Lang Codes!", callback_data="lang_codes")]]
    
IMAGE = "http://telegra.ph/file/c50b1959b61acf73f0a57.jpg"

TRUTH_STRING = """ ~~ ** Hey! {} ~~**
{} give you a Truth! ~ ЁЯШ│
~~**Here the truth**~~: **{}** ЁЯШИ
~~ **Now tell the truth to** ~~: **{}**! ЁЯШ░
"""

CODES = """ **The list of available truth or dare translation codes!**\n
**Bengali**: `bn`
**German**: `de`
**Spanish**: `es`
**French**: `fr`
**Hindi**: `hi`
**Tagalog**: `tl`
"""
ta = ("роирпАроЩрпНроХро│рпН ропро╛ро░рпИропро╛ро╡родрпБ рокрпЗроЪрпБрокро╡ро░ро╛? "
     "роЙроЩрпНроХро│рпН рокрпЖро▒рпНро▒рпЛро░рпНроХро│рпН 'роЕродрпИ' роЪрпЖропрпНро╡родрпИ роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ роироЯроирпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
    "роЙроЩрпНроХро│рпБроХрпНроХрпБ рооро┐роХро╡рпБроорпН рокро┐роЯро┐родрпНрод роХроЯрпИроЪро┐ роирокро░рпН ропро╛ро░рпН? роПройрпН?"
    "роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ рокро│рпНро│ро┐ропро┐ро▓рпН роЗро░рпБроирпНродрпБ роЗроЯрпИроирпАроХрпНроХроорпН роЪрпЖропрпНропрокрпНрокроЯрпНроЯро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?"
    "роиро┐ро░рпНро╡ро╛рогрооро╛роХ роЪрпЖро▓рпНро╡родро▒рпНроХрпЛ роЕро▓рпНро▓родрпБ роЙроЩрпНроХро│рпН роОрогрпНрогроЩрпНроХро│рпН роЙроЩрпНроХро│рпН родро▓рпИроХрпНроХрпБ роорпЗро▓рпЗ роЙро│рпНро│ роЪро┐роирпНродройрпИ роХрпБрооро┐ро┤ро┐роХро│ро┐ро▓рпН родрпЛройрпНро▒рпБро╡родро▒рпНроХрпЛ роЗроЯрпИропро┐ро▓рпН роирпАроЩрпНроХро│рпН рокроЯро┐роХрпНроХ ро╡рпЗрогрпНроЯро┐ропро┐ро░рпБроирпНродро╛ро▓рпН, роирпАроЩрпНроХро│рпН роОродрпИ родрпЗро░рпНро╡рпБ роЪрпЖропрпНро╡рпАро░рпНроХро│рпН?",
    "роирпАроЩрпНроХро│рпН роЗро┤роХрпНроХ рокропрокрпНрокроЯрпБроорпН роТро░рпБ ро╡ро┐ро╖ропроорпН роОройрпНрой?",
    "роЗроирпНрод роирпЗро░родрпНродро┐ро▓рпН роирпАроЩрпНроХро│рпН ропро╛ро░рпИропро╛ро╡родрпБ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
    "роЙроЩрпНроХро│рпН роЪро┐ро▒роирпНрод роирогрпНрокро░рпИрокрпН рокро▒рпНро▒ро┐ роирпАроЩрпНроХро│рпН рокрпКро▒ро╛роорпИрокрпНрокроЯрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
    "роТро░рпБ рокрогроХрпНроХро╛ро░ройрпБроХрпНроХро╛роХ роЙроЩрпНроХро│рпН роХро╛родро▓ройрпИ роПрооро╛ро▒рпНро▒рпБро╡рпАро░рпНроХро│ро╛?"
    "роЙроЩрпНроХро│рпН рооро┐роХрокрпНрокрпЖро░ро┐роп родро┐ро░рпБрокрпНрокроорпН роОройрпНрой?",
    "роЙроЩрпНроХро│рпН рокрпЖро▒рпНро▒рпЛро░ро┐роЯроорпН роХроЯрпИроЪро┐ропро╛роХ роОрокрпНрокрпЛродрпБ рокрпКропрпН роЪрпКройрпНройрпАро░рпНроХро│рпН, роПройрпН?"
    "роЙроЩрпНроХро│рпН роЪро┐ро▒роирпНрод роХрпВроЯрпНроЯро╛ро│ро░рпИ ро╡ро┐ро╡ро░ро┐роХрпНроХро╡рпБроорпН."
    "роирпАроЩрпНроХро│рпН роЪрпЖропрпНрод рокропроЩрпНроХро░рооро╛рой ро╡ро┐ро╖ропроорпН роОройрпНрой?",
    "роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ роЙроЩрпНроХро│рпН роорпВроХрпНроХрпИ роОроЯрпБродрпНродрпБ роЪро╛рокрпНрокро┐роЯрпНроЯрпАро░рпНроХро│ро╛?",
    "роЙроЩрпНроХро│рпН рокрпЖро▒рпНро▒рпЛро░ро┐роЯроорпН роХроЯрпИроЪро┐ропро╛роХ роОрокрпНрокрпЛродрпБ рокрпКропрпН роЪрпКройрпНройрпАро░рпНроХро│рпН, роПройрпН?"
    "роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ роТро░рпБ роХро╛родро▓ро┐ропрпИ роЖройрпНро▓рпИройро┐ро▓рпН рокродро┐ро╡рпБ роЪрпЖропрпНроп роорпБропро▒рпНроЪро┐родрпНродрпАро░рпНроХро│ро╛?",
    "роТро░рпБ рокрпЖрогрпНрогрпИ ро╡ро╛роЯроХрпИроХрпНроХрпБрокрпН рокро╛ро░рпНродрпНрод рокро┐ро▒роХрпБ, роЙроЩрпНроХро│рпБроХрпНроХрпБроорпН роЖройрпНро▓рпИройро┐ро▓рпН роЬро┐роОроГрокрпН рокрпБроХрпНроХро┐роЩрпНроХро┐ро▓рпН роЖро░рпНро╡роорпН роЗро░рпБроХрпНроХро┐ро▒родро╛?",
    "рокрпЛроЯрпНроЯро┐ропро┐ро▓рпН рокроЩрпНроХрпЗро▒рпНроХ роЙроЩрпНроХро│рпН ро╡ропродрпБ роХрпБро▒ро┐родрпНродрпБ роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ рокрпКропрпН роЪрпКро▓рпНро▓ро┐ропро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?" ,
    "роирпАроЩрпНроХро│рпН роОрокрпНрокрпЛродро╛ро╡родрпБ ропро╛ро░рпИропро╛ро╡родрпБ роЪрпЛродройрпИ роЪрпЖропрпНродрпБ рокро┐роЯро┐рокроЯрпНроЯрпАро░рпНроХро│ро╛?" ]
         
@bot.on_message(filters.command("truth"))
async def truth(_, m):
       reply = m.reply_to_message
       API = requests.get("https://api.truthordarebot.xyz/v1/truth").json()
       Bengali = API["translations"]["bn"]
       German = API["translations"]["de"]
       Spanish = API["translations"]["es"]
       French = API["translations"]["fr"]
       Hindi = API["translations"]["hi"]
       Tagalog = API["translations"]["tl"]
       if len(m.command) < 2:
             await m.reply_photo(IMAGE,caption="baka! read the langs codes!ЁЯШС",
             reply_markup=InlineKeyboardMarkup(LANG_CODE))
             return
       text = m.text.split(None, 1)[1]
       name1 = reply.from_user.first_name
       name2 = m.from_user.first_name
       if reply:
           if text.endswith("bn"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,Bengali,name2))
               return
           if text.endswith("de"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,German,name2))
               return
           if text.endswith("es"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,Spanish,name2))
               return
           if text.endswith("fr"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,French,name2))
               return
           if text.endswith("hi"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,Hindi,name2))
               return
           if text.endswith("tl"):
               await reply.reply_photo(IMAGE,caption=TRUTH_STRING.format(name1,name2,Tagalog,name2))
               

                                  
@bot.on_callback_query(filters.regex("lang_codes"))
async def langs(_, query: CallbackQuery):
        await query.message.edit_caption(CODES)
                                  
                                  
                                  
                                  
bot.run()
with bot:
         bot.send_message(f"@{SUPPORT}", f"Hello there I'm Online!\nPyroVersion: {pyro}")
